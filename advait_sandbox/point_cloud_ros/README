
rosbag play 2010-07-02-14-55-16.bag --clock
roslaunch launch/og_converter.launch



-------------------------------------------------------------------------------
To plaback a bag file with an appropriate clock message, use:
1) rosparam set use_sim_time true
2) rosbag play 2010-06-29-12-35-23.bag --clock
The --clock is what is important.


This also works:

1) ./bin/pc_to_og points_in:=/narrow_stereo_textured/points og_out:=occupancy_grid
2) python src/examples/set_og_params.py
3) python src/point_cloud_ros/differencing_node.py
4) ./bin/og_to_pc og_in:=difference_occupancy_grid points_out:=difference_points_out
5) ./bin/og_to_pc og_in:=occupancy_grid points_out:=og_points # optional
6) rosrun rviz rviz


This works:
1) python src/point_cloud_ros/differencing_node.py
2) ./og_to_pc og_in:=difference_occupancy_grid
3) ./bin/og_difference test_pcd.pcd




This did not work.
1) ./bin/pc_to_og points_in:=/narrow_stereo/points og_out:=occupancy_grid
2) python src/point_cloud_ros/differencing_node.py
3) ./bin/og_to_pc og_in:=difference_occupancy_grid


To view the point clouds in rviz, I also need to run the
static_transform_publisher:
rosrun tf static_transform_publisher 0 0 0 0 0 0 1 /map /base_link 1000



Lines after this will probably not work with cturtle. I need to make appropriate changes.
-----------------------------------------------------------------------------------------

numpy_pc_2009Jun02_181409.pkl: pickle of a 3xN numpy matrix of 3D points. This is a real point cloud of a door using a tilting laser range finder.

python ros_point_clouder.py -h will give some information about the usage.

Tests:

./ros_point_clouder -h will display a help message.
Run all tests from bin

1) terminal 1 - ./start_downsampler.sh
   terminal 2 - ./ros_point_clouder --pc ../data/numpy_pc_2009Jun01_182408.pkl

    downsampled point cloud will be displayed using mayavi2.

2) terminal 1 - ./start_normal_estimator.sh
   terminal 2 - ./ros_point_clouder --sphere

   A file "normals_cloud_<timestamp>.pkl" will get created.
   
   terminal 2 - ./ros_point_clouder -f ../data/normals_cloud_2009Jun02_202114.pkl  --plot
    surface normals and curvature for synthetic sphere will get displayed.

3) Try 2) with  "--pc numpy_pc_2009Jun01_182408.pkl" instead of "--sphere" to plot surface normals and curvature of a real point cloud.




