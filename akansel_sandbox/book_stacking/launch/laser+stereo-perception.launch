<launch>
    <arg name="use_camera_in_collider" default="true" />


  
  <include file="$(find rgbd_assembler)/launch/openni_node.launch"/>
  
  <!-- send additional description parameters -->
  <include file="$(find pr2_arm_navigation_config)/launch/pr2_planning_environment.launch" />

  <node pkg="pr2_mechanism_controllers" type="send_periodic_cmd_srv.py" name="laser_tilt_controller_3dnav_params" 
     args="laser_tilt_controller linear 15 1 1.05" />
    
  <node name="$(anon dynparam)" pkg="dynamic_reconfigure" type="dynparam" args="set_from_parameters tilt_hokuyo_node">
    <param name="intensity" type="bool" value="false" />
    <param name="min_ang" type="double" value="-1.15" />
    <param name="max_ang" type="double" value="1.15" />
  </node>

<node pkg="laser_filters" type="scan_to_scan_filter_chain" output="screen" name="laser_filter">
      <remap from="scan" to="/tilt_scan" />
      <remap from="scan_filtered" to="/tilt_scan_shadowed" />
      <rosparam command="load" file="$(find laser_filters)/examples/shadow_filter_example.yaml" />
</node>

  <node pkg="laser_assembler" type="laser_scan_assembler" name="laser_scan_assembler">
    <remap from="scan" to="/tilt_scan_shadowed"/>
    <param name="fixed_frame" value="/odom_combined"/>
    <param name="max_scans" type="int" value="800" />
    <rosparam command="load" file="$(find pr2_arm_navigation_perception)/config/shadow_filter.yaml" />
  </node>

 <node pkg="point_cloud_converter" name="point_cloud_converter_preself" type="point_cloud_converter">
        <remap from="/points_in" to="/assembled_pt_cloud_raw" />
        <remap from="/points2_out" to="/assembled_pt_cloud2_raw" />
  </node>

  <!-- self filter laser scans -->
  <node pkg="robot_self_filter" type="self_filter" respawn="true" name="laser_self_filter" output="screen">
     <remap from="cloud_in" to="/assembled_pt_cloud2_raw" />
     <remap from="cloud_out" to="/assembled_pt_cloud2_self_filtered" />
     <param name="sensor_frame" type="string" value="laser_tilt_link" />        
     <param name="subsample_value" type="double" value=".01"/>
     <rosparam command="load" file="$(find pr2_arm_navigation_perception)/config/self_filter.yaml" />
  </node>



    <group if="$(arg use_camera_in_collider)">
      <!-- self filter Kinect points -->
      <node pkg="robot_self_filter" type="self_filter" respawn="true" name="stereo_self_filter" 
        output="screen">
        <remap from="cloud_in" to="/camera/rgb/points" />
        <remap from="cloud_out" to="/camera/rgb/points_filtered2" />
        <param name="sensor_frame" type="string" value="openni_rgb_optical_frame" />
        <param name="subsample_value" type="double" value=".02"/>
        <rosparam command="load" file="$(find pr2_object_manipulation_launch)/config/self_filter.yaml" />
      </node>
    </group>

    <!-- separate self filter Kinect points for creating object models with higher resolution-->
    <node pkg="robot_self_filter" type="self_filter" respawn="true" name="object_modeling_kinect_self_filter" 
      output="screen">
      <remap from="cloud_in" to="/camera/rgb/points" />
      <remap from="cloud_out" to="/camera/rgb/object_modeling_points_filtered" />
      <param name="sensor_frame" type="string" value="openni_rgb_optical_frame" />
      <param name="subsample_value" type="double" value=".01"/>
      <rosparam command="load" file="$(find pr2_object_manipulation_launch)/config/self_filter.yaml" />
    </node>


  <node pkg="collider" type="collider_node" name="collider_node" respawn="true" output="screen">
     <param name="fixed_frame" type="string" value="odom_combined" />
     <param name="resolution" type="double" value="0.02" />
     <param name="max_range" type="double" value="2.0" />
     <param name="publish_static_over_dynamic_map" value="false" />
     <param name="pruning_period" value="1" />
     <remap from="collision_map_out" to="collision_map_occ" />
     <remap from="point_cloud_out" to="octomap_point_cloud" />

     <rosparam command="load" 
       file="$(find book_stacking)/config/collision_map_sources_laser+stereo.yaml"/>
   
     <!-- self filtering links -->
     <rosparam command="load" file="$(find pr2_arm_navigation_perception)/config/self_filter.yaml" /> 
   </node>

</launch>
